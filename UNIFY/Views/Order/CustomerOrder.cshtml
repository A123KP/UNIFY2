@model UNIFY.Services.OrderDetailsDto
@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

    <link href="~/css/Orderprocessing/Customer.css" rel="stylesheet" />
}
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="order-card">
                    <div class="order-header d-flex justify-content-between align-items-center">
                        <div>
                            <h4>Order #ORD @Model.Order?.OrderId</h4>
                            <p class="order-date">Placed on: @Model.Order.OrderDate?.ToString("MMM dd, yyyy")</p>
                        </div>
                    @{
                        string status = Model.Order.Status.ToString().ToLower();
                        string badgeClass = status switch
                        {
                            "pending" => "badge-pending",
                            "shipped" => "badge-shipped",
                            "delivered" => "badge-delivered",
                            "cancelled" => "badge-cancelled",
                            _ => "badge-secondary"
                        };
                    }
                    <span class="badge @badgeClass p-2" style="font-size: 0.9rem;">
                        @Model.Order.Status.ToString().ToUpperInvariant()
                    </span>
                    </div>
                    <h6>Delivery Status:</h6>
                    <div class="status-tracker" data-current-status="@Model.Order.Status.ToString().ToLower()">
                        <div class="status-step" data-status="pending">
                            <div class="icon-circle"><i class="fas fa-check"></i></div>
                            <div class="status-label">PENDING</div>
                        </div>
                        <div class="status-step" data-status="shipped">
                            <div class="icon-circle"><i class="fas fa-truck"></i></div>
                            <div class="status-label">SHIPPED</div>
                        </div>
                        <div class="status-step" data-status="delivered">
                            <div class="icon-circle"><i class="fas fa-home"></i></div>
                            <div class="status-label">DELIVERED</div>
                        </div>
                        <div class="status-step" data-status="cancelled">
                            <div class="icon-circle"><i class="fas fa-times-circle"></i></div>
                            <div class="status-label">CANCELLED</div>
                        </div>
                    </div>
                    <h6>Items Ordered:</h6>
                    <div class="item-list">
                    @foreach (var item in Model.Items)
                    {
                        <div class="item d-flex justify-content-between">
                            <div>
                                <h6>@item.Product?.Name</h6>
                                <p>Qty: @item.Quantity</p>
                            </div>
                            <div class="item-price">₹@item.Price</div>
                        </div>
                    }
                    </div>
                    <div class="order-summary">
                        <p class="total"><span>Total Amount:</span> <span>₹@Model.Order.TotalAmount</span></p>
                    </div>
                    <div class="ratings-section">
                        <h6>Rate Your Order:</h6>
                        <div class="star-rating" data-order-id="@Model.Order.OrderId">
                            <i class="far fa-star" data-value="1"></i>
                            <i class="far fa-star" data-value="2"></i>
                            <i class="far fa-star" data-value="3"></i>
                            <i class="far fa-star" data-value="4"></i>
                            <i class="far fa-star" data-value="5"></i>
                        </div>
                        <small class="form-text text-muted mt-1">Click stars to rate.</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            // Star rating code - unchanged
            $('.star-rating .fa-star').on('click', function () {
                if ($(this).parent().hasClass('disabled')) return;
                const ratingValue = $(this).data('value');
                const stars = $(this).parent().find('.fa-star');
                const orderId = $(this).parent().data('order-id');
                stars.each(function (index) {
                    if (index < ratingValue) {
                        $(this).removeClass('far').addClass('fas selected');
                    } else {
                        $(this).removeClass('fas selected').addClass('far');
                    }
                });
                console.log(`Order ${orderId} rated: ${ratingValue} stars`);
            });
            // Star hover effect - unchanged
            $('.star-rating:not(.disabled) .fa-star').hover(
                function () {
                    const hoverValue = $(this).data('value');
                    $(this).addClass('selected').prevAll('.fa-star').addClass('selected');
                    $(this).nextAll('.fa-star').removeClass('selected fas').addClass('far');
                },
                function () {
                    const $starContainer = $(this).parent();
                    let currentRating = 0;
                    $starContainer.find('.fa-star.fas').each(function () {
                        if ($(this).data('value') > currentRating) {
                            currentRating = $(this).data('value');
                        }
                    });
                    if (currentRating === 0 && $starContainer.find('.fa-star.selected').length > 0) {
                        currentRating = $starContainer.find('.fa-star.selected:last').data('value');
                    }
                    $starContainer.find('.fa-star').each(function (index) {
                        if (index < currentRating) {
                            $(this).removeClass('far').addClass('fas selected');
                        } else {
                            $(this).removeClass('fas selected').addClass('far');
                        }
                    });
                }
            );
            // Progress bar updater - unchanged
            function updateProgressBar() {
                $('.status-tracker').each(function () {
                    const $tracker = $(this);
                    const currentStatus = $tracker.data('current-status');
                    const $steps = $tracker.find('.status-step');
                    let currentStatusIndex = -1;
                    $steps.each(function (index) {
                        const status = $(this).data('status');
                        if (status === currentStatus) {
                            currentStatusIndex = index;
                        }
                        $(this).removeClass('completed current');
                    });
                    $steps.each(function (index) {
                        if (index < currentStatusIndex) {
                            $(this).addClass('completed');
                        } else if (index === currentStatusIndex) {
                            $(this).addClass('current completed');
                        }
                    });
                });
            }
            updateProgressBar();
        });
    </script>