@model UNIFY.Models.Order

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Secure Payment";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Payment/Style.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
}

<div class="container mt-5 mb-5">
    <div class="breadcrumb-container">
        <a>Home</a> /
        <a>Cart</a> /
        <span>Payment</span>
    </div>

    <h2 class="mb-4 text-center">Choose Your Payment Method</h2>
    <div class="row justify-content-center">
        <div class="col-md-3">
            <div class="nav flex-column nav-pills payment-nav" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                <a class="nav-link active" id="v-pills-card-tab" data-bs-toggle="pill" href="#v-pills-card" role="tab" aria-controls="v-pills-card" aria-selected="true">
                    <i class="fas fa-credit-card me-2"></i>CARD
                </a>
                <a class="nav-link" id="v-pills-upi-tab" data-bs-toggle="pill" href="#v-pills-upi" role="tab" aria-controls="v-pills-upi" aria-selected="false">
                    <i class="fas fa-mobile-alt me-2"></i>UPI
                </a>
                <a class="nav-link" id="v-pills-cod-tab" data-bs-toggle="pill" href="#v-pills-cod" role="tab" aria-controls="v-pills-cod" aria-selected="false">
                    <i class="fas fa-hand-holding-usd me-2"></i>COD
                </a>
            </div>
        </div>

        <div class="col-md-8 col-lg-7">
            <div id="notification-container" class="notification-container"></div>
            <div class="tab-content" id="v-pills-tabContent">
                <div class="tab-pane fade show active p-4" id="v-pills-card" role="tabpanel" aria-labelledby="v-pills-card-tab">
                    <h4 class="mb-4">CREDIT / DEBIT CARD</h4>
                    <form id="cardPaymentForm">
                        <div class="form-group mb-3">
                            <label for="cardNumber">Card Number</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="cardNumber" placeholder="xxxx xxxx xxxx xxxx" required>
                                <span class="input-group-text" id="card-icon-container"><i class="fab fa-cc-visa" style="opacity: 0.3;"></i></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-7 mb-3">
                                <label for="expiryDate">Expiry Date</label>
                                <input type="text" class="form-control" id="expiryDate" placeholder="MM/YY" required>
                            </div>
                            <div class="form-group col-md-5 mb-3">
                                <label for="cvv">CVV</label>
                                <input type="text" class="form-control" id="cvv" placeholder="xxx" required>
                            </div>
                        </div>
                        <div class="form-group mb-3">
                            <label for="cardHolderName">Cardholder Name</label>
                            <input type="text" class="form-control" id="cardHolderName" placeholder="Enter name as on card" required>
                        </div>
                        <div class="form-group mb-4">
                            <label for="displayCardAmount">Amount</label>
                            <input type="text" class="form-control" id="displayCardAmount" value="₹@Model.TotalAmount?.ToString("N2")" readonly>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <button type="button" class="btn btn-outline-secondary cancel-button">Cancel</button>
                            <button type="submit" class="btn btn-danger" id="cardPayButton">Pay Now <i class="fas fa-arrow-right ms-2"></i></button>
                        </div>
                    </form>
                </div>

                <div class="tab-pane fade p-4" id="v-pills-upi" role="tabpanel" aria-labelledby="v-pills-upi-tab">
                    <h4 class="mb-4">UPI PAYMENT</h4>
                    <form id="upiPaymentForm">
                        <div class="form-group mb-3">
                            <label for="upiId">UPI ID</label>
                            <input type="text" class="form-control" id="upiId" placeholder="yourname@bank" required>
                        </div>
                        <div class="form-group mb-4">
                            <label for="displayUpiAmount">Amount</label>
                            <input type="text" class="form-control" id="displayUpiAmount" value="₹@Model.TotalAmount?.ToString("N2")" readonly>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <button type="button" class="btn btn-outline-secondary cancel-button">Cancel</button>
                            <button type="submit" class="btn btn-danger" id="upiPayButton">Pay via UPI <i class="fas fa-arrow-right ms-2"></i></button>
                        </div>
                    </form>
                </div>

                <div class="tab-pane fade p-4" id="v-pills-cod" role="tabpanel" aria-labelledby="v-pills-cod-tab">
                    <h4 class="mb-3">CASH ON DELIVERY</h4>
                    <p class="mb-2">Your order will be delivered to your registered address.</p>
                    <p class="mb-4">Please keep the exact amount ready to pay to the delivery executive upon receiving your order.</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <button type="button" class="btn btn-outline-secondary cancel-button">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmCodButton">Proceed to Order <i class="fas fa-check-circle ms-2"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            function showMessage(message, type = 'info') {
                const notificationContainer = $('#notification-container');
                const notification = $(`
                    <div class="notification notification-${type}">
                        ${message}
                        <button class="close-btn">&times;</button>
                    </div>
                `);

                notification.find('.close-btn').on('click', function() {
                    $(this).parent().fadeOut(300, function() { $(this).remove(); });
                });

                notificationContainer.append(notification).fadeIn(300);

                setTimeout(() => {
                    notification.fadeOut(500, function() { $(this).remove(); });
                }, 5000);
            }

            let originalButtonContent = {};

            function showLoadingState(buttonId, loadingText = 'Processing...') {
                const button = $(`#${buttonId}`);
                if (button.length) {
                    originalButtonContent[buttonId] = button.html();
                    button.prop('disabled', true);
                    button.html(`<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> ${loadingText}`);
                }
            }

            function hideLoadingState(buttonId) {
                const button = $(`#${buttonId}`);
                if (button.length && originalButtonContent[buttonId]) {
                    button.prop('disabled', false);
                    button.html(originalButtonContent[buttonId]);
                }
            }

            function processPayment(actionOrMethod, buttonId = null) {
                if (!actionOrMethod) {
                    showMessage("Payment action or method is missing.", 'danger');
                    return;
                }

                if (buttonId) {
                    showLoadingState(buttonId);
                }

                const model = {
                    PaymentMethod: actionOrMethod
                };

                $.ajax({
                    url: '@Url.Action("ProcessPayment", "Payment")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(model),
                    success: function (response) {
                        if (response.success) {
                            showMessage(response.message, actionOrMethod === 'cancelled' ? 'info' : 'success');
                            if (response.redirectUrl) {
                                setTimeout(() => { window.location.href = response.redirectUrl; }, 1000);
                            } else {
                                if (buttonId) hideLoadingState(buttonId);
                            }
                        } else {
                            showMessage('Operation failed: ' + response.message, 'danger');
                            if (buttonId) hideLoadingState(buttonId);
                        }
                    },
                    error: function (xhr) {
                        console.error("AJAX Error:", xhr.status, xhr.statusText, xhr.responseText);
                        showMessage("Error processing payment: " + (xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : xhr.statusText), 'danger');
                        if (buttonId) hideLoadingState(buttonId);
                    }
                });
            }

            $('#cardPaymentForm').submit(function (e) {
                e.preventDefault();
                processPayment('card', 'cardPayButton');
            });

            $('#upiPaymentForm').submit(function (e) {
                e.preventDefault();
                processPayment('upi', 'upiPayButton');
            });

            // --- START: MODIFIED to remove confirm() dialog ---
            $('.cancel-button').on('click', function(e) {
                e.preventDefault();
                // The confirm() pop-up has been removed.
                processPayment('cancelled');
            });
            // --- END: MODIFIED ---

            $('#confirmCodButton').click(function () {
                processPayment('cod', 'confirmCodButton');
            });

            // --- START: MODIFIED to remove confirm() dialog ---
            function handleCancellation(e) {
                e.preventDefault(); // Prevent default link navigation
                // The confirm() pop-up has been removed.
                processPayment('cancelled');
            }

            $('.breadcrumb-item a').each(function() {
                if ($(this).text().trim().toLowerCase() === 'home') {
                    // The second parameter to handleCancellation is no longer needed
                    $(this).on('click', function(e) { handleCancellation(e); });
                }
            });
            // --- END: MODIFIED ---

            $('#cardNumber').on('input', function (e) {
                let value = e.target.value.replace(/\D/g, '');
                value = value.replace(/(.{4})/g, '$1 ').trim();
                e.target.value = value.substring(0, 19);

                const iconContainer = $('#card-icon-container i');
                let cardType = 'fa-credit-card';
                let opacity = 0.3;

                if (/^4/.test(value)) {
                    cardType = 'fa-cc-visa';
                    opacity = 1;
                } else if (/^5[1-5]/.test(value)) {
                    cardType = 'fa-cc-mastercard';
                    opacity = 1;
                } else if (/^3[47]/.test(value)) {
                    cardType = 'fa-cc-amex';
                    opacity = 1;
                }

                iconContainer.attr('class', `fab ${cardType}`).css('opacity', opacity);
            });

            $('#expiryDate').on('input', function (e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length > 2) {
                    value = value.substring(0, 2) + '/' + value.substring(2, 4);
                }
                e.target.value = value;
            });

            $('#cvv').on('input', function (e) {
                let value = e.target.value.replace(/\D/g, '');
                e.target.value = value.substring(0, 4);
            });

            var triggerTabList = [].slice.call(document.querySelectorAll('#v-pills-tab a'));
            triggerTabList.forEach(function (triggerEl) {
                var tabTrigger = new bootstrap.Tab(triggerEl);
                triggerEl.addEventListener('click', function (event) {
                    event.preventDefault();
                    tabTrigger.show();
                });
            });

        });
    </script>
}