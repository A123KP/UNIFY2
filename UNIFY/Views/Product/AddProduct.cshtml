@model UNIFY.Models.Product

@{
    ViewData["Title"] = "Add New Product";
    // Ensure only one @model directive is present
    // Ensure 'var categories = ViewBag.Categories as List<UNIFY.Models.Category>;' is NOT present
}

<link rel="stylesheet" href="~/css/product/productstyle.css" asp-append-version="true" />

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 style="color: #dc3545">Add New Product</h2>
    </div>
    <hr />
    <form asp-action="AddProduct" asp-controller="Product" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

        <div class="mb-3">
            <label asp-for="Name" class="form-label"><strong>Product Name</strong></label>
            <input asp-for="Name" class="form-control" placeholder="e.g., SAMSUNG Galaxy F05 (Twilight Blue, 64 GB) (4 GB RAM)" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label"><strong>Description</strong></label>
            <textarea asp-for="Description" class="form-control" rows="10" placeholder="A brief description of the product..."></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Price" class="form-label"><strong>Price</strong></label>
            <div class="input-group">
                <span class="input-group-text">₹</span>
                <input asp-for="Price" class="form-control" type="number" step="0.01" min="0.01" placeholder="e.g., 999.99" />
            </div>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="StockQuantity" class="form-label"><strong>Stock Quantity</strong></label>
            <input asp-for="StockQuantity" class="form-control" type="number" min="0" placeholder="e.g., 50" />
            <span asp-validation-for="StockQuantity" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="CategoryId" class="form-label"><strong>Category</strong></label>
            <div class="input-group">
                <select asp-for="CategoryId" class="form-select" id="CategoryId"
                        asp-items="@(new SelectList(ViewBag.Categories, "CategoryId", "Name"))">
                    <option value="">-- Select Category --</option>
                    @* Ensure no manual @foreach loop here *@
                </select>
                <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#createCategoryModal" title="Create New Category">
                    <i class="bi bi-plus-circle"></i>
                </button>
            </div>
            <span asp-validation-for="CategoryId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="productImage" class="form-label"><strong>Product Image</strong></label>
            <input type="file" class="form-control" id="productImage" name="productImage" accept="image/jpeg" /> @* Modified accept attribute *@
            <div class="form-text">Upload an image for the product. Image will be saved as "Product[ProductId].jpg".</div>
            <span id="productImageError" class="text-danger"></span> @* Added a span for image error *@
        </div>

        <div class="d-flex justify-content-start gap-2 mt-4">
            <button type="submit" class="btn btn-custom-red">
                <i class="bi bi-save me-2"></i> Add Product
            </button>
            <a asp-action="Product" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left me-2"></i> Back to Product List
            </a>
        </div>
    </form>
</div>

@* Modals (assuming they are correct) *@
<div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCategoryModalLabel">Create New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="newCategoryName" class="form-label">Category Name</label>
                    <input type="text" class="form-control" id="newCategoryName" required maxlength="100" placeholder="e.g., Home Decor, Sports">
                </div>
                <div id="categoryError" class="text-danger"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveCategoryBtn">Create Category</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageModalLabel">Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="messageModalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            $('#saveCategoryBtn').click(function () {
                var categoryName = $('#newCategoryName').val();

                $('#categoryError').text(''); // Clear previous errors

                if (!categoryName || categoryName.trim() === '') {
                    $('#categoryError').text('Category Name cannot be empty.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("CreateCategory", "Product")',
                    type: 'POST',
                    data: { categoryName: categoryName },
                    success: function (response) {
                        if (response.success) {
                            var newOption = $('<option>', {
                                value: response.category.categoryId,
                                text: response.category.name
                            });
                            $('#CategoryId').append(newOption);
                            $('#CategoryId').val(response.category.categoryId); // Select the newly created category

                            $('#createCategoryModal').modal('hide');
                            $('#newCategoryName').val(''); // Clear modal input

                            // --- REPLACED alert() with custom modal ---
                            $('#messageModalLabel').text('Success!');
                            $('#messageModalBody').text('Category "' + response.category.name + '" created successfully!');
                            var messageModal = new bootstrap.Modal(document.getElementById('messageModal'));
                            messageModal.show();
                            // --- END REPLACEMENT ---

                        } else {
                            $('#categoryError').text(response.message || 'An unknown error occurred.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX Error: ", status, error);
                        console.error("Response Text:", xhr.responseText);
                        $('#categoryError').text('An error occurred while creating the category. Please check console for details.');

                        // --- REPLACED alert() with custom modal for errors too ---
                        $('#messageModalLabel').text('Error!');
                        $('#messageModalBody').text('An error occurred while creating the category. Please try again.');
                        var messageModal = new bootstrap.Modal(document.getElementById('messageModal'));
                        messageModal.show();
                        // --- END REPLACEMENT ---
                    }
                });
            });

            // Optional: Clear modal fields when it's shown
            $('#createCategoryModal').on('shown.bs.modal', function () {
                $('#newCategoryName').val('');
                $('#categoryError').text('');
            });

            //Image validation 
             $('#productImage').on('change', function () {
                var fileInput = this;
                var filePath = fileInput.value;
                var allowedExtensions = /(\.jpg|\.jpeg)$/i; // Case-insensitive check for .jpg or .jpeg

                if (filePath && !allowedExtensions.exec(filePath)) {
                    $('#productImageError').text('Only JPG/JPEG images are allowed.');
                    fileInput.value = ''; // Clear the input
                    return false;
                } else {
                    $('#productImageError').text(''); // Clear any previous error
                }
            });
        });
    </script>
}